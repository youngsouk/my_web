{"remainingRequest":"E:\\programming\\web\\my_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\programming\\web\\my_web\\node_modules\\vue-skeleton-screen\\src\\SkeletonCard\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\programming\\web\\my_web\\node_modules\\vue-skeleton-screen\\src\\SkeletonCard\\index.vue","mtime":499162500000},{"path":"E:\\programming\\web\\my_web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\programming\\web\\my_web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\programming\\web\\my_web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\programming\\web\\my_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561121369568},{"path":"E:\\programming\\web\\my_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiByZXNldCBib3gtc2l6aW5nIGp1c3QgZm9yIHRoaXMgY29tcG9uZW50IGluIGNhc2UgdGhlIHVzZXIgdXNlIGRpZmZlcmVudCBib3ggbW9kZWwgKi8KLnNrZWxldG9uLWNhcmQgewogYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoqLCAqOmJlZm9yZSwgKjphZnRlciB7CiBib3gtc2l6aW5nOiBpbmhlcml0Owp9Cgouc2tlbGV0b24tY2FyZCB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwogICAgbWFyZ2luOiA4cHggNDhweDsKICAgIHBhZGRpbmc6IDAgOHB4IDhweDsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKICAgIGJveC1zaGFkb3c6IDAgMnB4IDFweCAtMXB4IHJnYmEoMCwwLDAsLjIpLCAwIDFweCAxcHggMCByZ2JhKDAsMCwwLC4xNCksIDAgMXB4IDNweCAwIHJnYmEoMCwwLDAsLjEyKTsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgIGN1cnNvcjogZGVmYXVsdDsKfQoKLmxvYWRpbmcgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmxvYWRpbmc6OmFmdGVyIHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgY29udGVudDogJyc7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7CiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHRyYW5zcGFyZW50LCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4yKSwgdHJhbnNwYXJlbnQpOwogICAgYW5pbWF0aW9uOiBsb2FkaW5nIDEuNXMgaW5maW5pdGU7Cn0KCkBrZXlmcmFtZXMgbG9hZGluZyB7CiAgICAxMDAlIHsKICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7CiAgICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vue-skeleton-screen/src/SkeletonCard","sourcesContent":["<template>\n    <div class=\"skeleton-card\" :style=\"{backgroundColor: bgcolor}\">\n        <CardHeader v-if=\"header\" :round=\"round\" :avatar=\"avatar\" :isLoading=\"isLoading\"></CardHeader>\n        <CardContent :round=\"round\" :lines=\"lines\" :media=\"media\" :isLoading=\"isLoading\"></CardContent>\n        <CardActions v-if=\"actions\" :isLoading=\"isLoading\"></CardActions>\n    </div>\n\n</template>\n\n<script>\nimport CardHeader from './components/CardHeader.vue';\nimport CardContent from './components/CardContent.vue';\nimport CardActions from './components/CardActions.vue';\n\nexport default {\n    name: 'SkeletonCard',\n    props: {\n        isLoading: {\n            type: Boolean,\n            default: false\n        },\n        header: {\n            type: Boolean,\n            default: true\n        },\n        avatar: {\n            type: Boolean,\n            default: true\n        },\n        media: {\n            type: Boolean,\n            default: true\n        },\n        actions: {\n            type: Boolean,\n            default: false\n        },\n        horizontal: {\n            type: Boolean,\n            default: false\n        },\n        lines: {\n            type: Number,\n            default: 2\n        },\n        dark: {\n            type: Boolean,\n            default: false\n        },\n        round: {\n            type: Boolean,\n            default: false\n        },\n    },\n    components: {\n        CardHeader,\n        CardContent,\n        CardActions\n    },\n    computed: {\n        bgcolor() {\n            if (this.dark) {\n                return '#424242';\n            }\n            return 'white';\n        }\n    },\n    mounted() {\n        // console.log(this.lines);\n    }\n};\n</script>\n\n<style>\n/* reset box-sizing just for this component in case the user use different box model */\n.skeleton-card {\n box-sizing: border-box;\n}\n*, *:before, *:after {\n box-sizing: inherit;\n}\n\n.skeleton-card {\n    position: relative;\n    display: block;\n    width: auto;\n    height: auto;\n    margin: 8px 48px;\n    padding: 0 8px 8px;\n    border-radius: 2px;\n    box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12);\n    text-decoration: none;\n    cursor: default;\n}\n\n.loading {\n    position: relative;\n    overflow: hidden;\n}\n\n.loading::after {\n    display: block;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    transform: translateX(-100%);\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, .2), transparent);\n    animation: loading 1.5s infinite;\n}\n\n@keyframes loading {\n    100% {\n        transform: translateX(100%);\n    }\n}\n</style>\n\n"]}]}